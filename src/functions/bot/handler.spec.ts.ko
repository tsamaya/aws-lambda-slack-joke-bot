// import type { APIGatewayProxyEvent } from 'aws-lambda';

import { main } from './handler';

import { Joke, getDadJoke } from '@libs/jokes';
import { postSlackMessage } from '@libs/slack';

describe.skip('handler', () => {
  test('it passes', async () => {
    const mockGetDadJoke = jest.fn() as jest.MockedFunction<typeof getDadJoke>;
    mockGetDadJoke.mockImplementation(async () => {
      const joke: Joke = {
        id: '123',
        joke: 'a good one',
        status: 200,
      };
      return Promise.resolve(joke);
    });
    const mockPostSlackMessage = jest.fn() as jest.MockedFunction<
      typeof postSlackMessage
    >;

    mockPostSlackMessage.mockImplementation();

    // const event: APIGatewayProxyEvent = {} as any;
    const response = await main(null, null, null);
    expect(response).toBeDefined();
    expect(mockGetDadJoke).toHaveBeenCalled();
    expect(mockPostSlackMessage).toHaveBeenCalled();
  });
});
